// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Product {
  id String  @id @default(uuid())
  name String @unique
  price Int
  description String
  images Photo[] @relation("ProductPhoto")
  variety String
  origin String
  flavor Boolean
  available Boolean
  weights Weight[] @relation("ProductWeights")
  orderedProducts OrderedProduct[]
}

model Weight {
  id String @id @default(uuid())
  label String
  value Int
  multiplier Float
  products Product[]  @relation("ProductWeights")
  orderedProducts OrderedProduct[]
}

model Photo {
  id String @id @default(uuid())
  image String
  products Product[] @relation("ProductPhoto")
}

model Delivery {
  id String @id @default(uuid())
  method String
  price Float
  leadTime String
  icon String
  orders Order[]
}

model OrderedProduct {
  id String  @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productAmount Int
  productSinglePrice Float
  productPrice Float
  weightId String
  weight Weight @relation(fields: [weightId], references: [id], onDelete: Cascade)
  optionalMessage String?
  orderId String
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Order {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  totalPrice Float
  productsPrice Float
  status String @default("pending")
  clientName String
  clientSurname String
  clientPhone String
  clientEmail String
  clientAddress String
  delivery Delivery @relation(fields: [deliveryId], references: [id], onDelete: Cascade)
  deliveryId String
  orderedProducts OrderedProduct[]
}


